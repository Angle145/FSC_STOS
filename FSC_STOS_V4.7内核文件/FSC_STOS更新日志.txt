FSC_STOS   
V4.7更新内容：
        (1)支持相同优先级设置，优先级相同的任务会被系统轮询，最大优先级=最大任务数-1。
        (2)OSTaskCreate()增加任务独立时间切片设置参数，可以根据任务代码量来决定任务一次连续
            运行的时间切片。
        (3)增加独立任务时间切片设置串口指令。
        (4)增加防止OS干扰驱动的驱动保护函数，在驱动中调用。
        (5)增加系统运行计时和倒计时关闭系统函数(可剪裁)以及系统开关函数。  
        (6)系统状态信息增加独立任务时间切片显示。 
        (7)简化纠错系统。 
        (8)更新FSC_STOS例程及说明，内容更加详细。    

历史版本：

V4.6.4更新内容：
        (1)完善FSC智能纠错系统(可剪裁)，增加自动修复、自动重启功能。
        (2)增加任务切换函数、增加获取最高优先级任务函数。
        (3)支持stm32fl1xx(L1系列)，经网友“风中月”在stm32l151上实测通过，在此感谢该网友。         

V4.6.3更新内容：
        (1)修改指令中数字范围从无符32bit->有符32bit，支持负数，小数请分两部分(整数和小数部分)发            送，然后在程序中接收两部分数后再合成一个小数，此步骤由用户程序完成，OS不提供支持。
        (2)修改时间切片机制，系统定时器固定定时为1ms，任务时间切片可设置为任意ms。
        (3)增加错误检测系统，当发生故障进入硬件错误中断时可输出帮助排错的信息。
        (4)系统状态信息增加OS累计运行时间显示和任务活跃度(1s内运行次数)，优化整体显示效果。
        (5)优化其他小细节。

V4.6.2更新内容：
        (1)修改指令中数字范围从u16->u32。
        (2)更新FSC_STOS说明及例程PDF(修复4.6.1版本中PDF中的错误)。

V4.6.1更新内容：
        (1)更新void OSTaskStateSet( )为INT8U OSTaskStateSet( )，返回值OS_FALSE\OS_TRUE，前            者表示设置失败，后者表示设置成功( 其内部功能已更新，具体查看函数代码)。
        (2)增加void OSTimeSliceSet(INT32U time); //设置时间切片节拍数 函数。(一般用不到)

V4.6更新内容：
        (1)整合asm文件和FSC_STOS.c文件使之适用于所有支持内核，移植从未如此简单。
        (2)整合PendNB和PendOC到Pend函数，采用在Pend函数中增加一个参数来选择等待类型方式。
        (3)修改指令字节接收入口函数名OSCmdUsartReceiveByte为OSCmdRxByte使之更简洁。 
        (4)增加虚拟定时器有关函数，和低版本兼容。详情请查看具体代码。
        (5)增加时间切片时间设置指令。
        (6)FSC_STOS说明及例程PDF更新。增加了用户自定义添加指令的简单教程。

V4.5.1更新内容：
        (1)增加OSFlagPendNB(非阻塞)、OSFlagPendOC(检测旧信号) 等函数。
        (2)增加设置系统时间RTC指令(需外部RTC程序支持)。
                      
V4.5更新内容：
        (1)增加顺序运行模式下对OSFlagGroup和Mutex的支持，修复信号量已知问题。
        (2)更新FSC_STOS说明及例程PDF文档。

V4.4.1更新内容：
        (1)优化移植，同步更新移植PDF文档。(优化移植串口指令系统，去除宏定义移植，简化移植)
        (2)增加ARM Cortex-M0支持，对应STM32的STM32F0系列。
        (3)增加STM32F0xx_STD工程Demo，MDK Device默认为STM32F030。

V4.4更新内容：
        (1)修复delay_us()函数。
            bug原因：
           关于系统定时器的参数定义：
           之前：
           #define OSTIMER_CONT_1us   SystemCoreClock/8/1000000   //系统定时器1us计数次数
           修复后：
           #define OSTIMER_CONT_1us   (SystemCoreClock/8/1000000) //系统定时器1us计数次数

           问题：计算结果超出32bit范围而引起延时不准。
           由于没有括号，在delay_us函数中，Ticks=nus*OSTIMER_CONT_1us; 此句等效于
           nus*72000000/8/1000000，由运算的先后顺序可知，先进行运算的是nus*72000000，此时                nus最大为2^32  / 72000000=59.6，也就是说超过59us的定时无效。加了括号后就改变了它的            运算顺序从而正确运算出延时值。
        (2)更改GetOSSliceTime()和GetOSTimerVal()名称为OSTimeSliceGet()和OSTimerValGet()。
        (3)关于delya_us()和delay_ms()函数的说明。前者长延时有10us以内的误差，短延时基本无误差，            后者无其他中断频繁或长时打断情况下基本无误差。基本满足大部分外接模块的驱动延时需要。
        (4)修复之后，10x_std工程中的Driver驱动恢复正常。  

V4.3更新内容：
        (1)增加可选择的屏蔽串口指令系统显示功能（printf函数占用超大内存，对于rom小的可选择关闭             显示功能，但指令控制系统仍在工作，只是不会显示反馈信息）。
        (2)增加STM32F407标准库模板工程。
        (3)增加STM32F103寄存器版模板工程。

V4.2更新内容：
        (1)重构OSFLAG、OSMUTEX、OSMBOX，提升实时响应，减小内存占用，提升速度。
        (2)修复4.1版本的串口系统指令(串口中断内的入口忘修改造成的)，还有指令字符长度修改成16
            导致长指令无法使用，建议保持32字节默认长度。
        (3)OS_delayMs()函数增加延时参数设为0时为无限等待，不占cpu资源(等价休眠)。
        (4)以上重构的模块均实验通过。同步更新了说明PDF。此版本经测试通过。

 V4.1 有问题。

 V4.0更新内容：
        (2)系统指令增加优先级设置。任务开关指令内容作适当修改。
        (3)修复MDK优化等级高出错问题。
        (4)OSStart()函数更名OSStartUp()。
        (5)PendSV中断初使化移动到FSC_STOS.c开头处，方便修改移植。
        (6)增加日时分秒的延时函数，包括系统延时函数和系统虚拟定时器延时函数。

 V3.5更新内容：
        (1)增加代码剪裁功能，在FSC_STOS.h里选择模块剪裁，根据个人需要剪裁掉不需要的功能，节省            内存。(已知，剪裁系统指令功能能后能节省6-9k内存，如内存紧张可剪裁掉串口系统指令功能)
        (2)系统状态信息增加任务状态。
        (3)更新PDF移植教程(配合剪裁作的修少量修改)。

V3.4更新内容：
        (1)调整代码布局，更名FSC_STOS文件夹的main.c为APP.c，使移植更加方便。
        (2)Driver外接模块增加eeprom支持。去掉了IIC初使化函数，使代码更简洁。
        (3)更新PDF教程，移植步骤更少。

 V3.3.1更新内容：
        (1)调整系统定时器有关代码到FSC_STOS.c开头处，方便修改使用其他定时器作为系统定时器。
        (2)将main.c开头处的文字说明移动到TXT文件夹的Readme.txt文件，使main界面清爽整洁。
            (增加两个用于说明支持STM32F4xxFPU功能的txt文件)
        (3)通用版移植到STM32f4需要关闭FPU功能，如需FPU请根据说明进行修改。

 V3.3更新内容：
        (1)内核增加任务栈使用情况及cpu占用率的查看，串口指令发送cmd/osmanage//即可查看。
            根据查看到的栈的实际使用情况后到程序里调整，充分利用内存。一般栈设为超过实际使用
            的10-20%最佳。

V3.2.1更新内容：
        (1)增加对STM32F4浮点运算器(FPU)的支持。
        (2)说明：普通版本适用于F1/F4，但是用于F4时，需要关闭F4的FPU才能正常使用。
                      关闭方法：MDK魔法棒图标->Code Generation下的Floating Point Hardware处修
                      改为Not Used。

                      需要F4的FPU功能的请使用FSC_STOS_STM32F4xx_FPU_support版本移植。

V3.2更新内容：
        (1)内核增加任务优先级运行模式，可选择运行模式：
            运行模式0：可抢断的顺序运行(与优先级无关)
            运行模式1：抢断式优先级运行(按优先级运行)
            运行模式在fsc_stos.h里设置。
        (2)任务管理器任务增加两条指令：
             1>cmd/sw/runmode/0//  --设OS工作在运行模式0
             2>cmd/sw/runmode/1//  --设OS工作在运行模式1

 V3.1.1更新内容：
        (1)增加了HAL库支持。


 V3.1更新内容： (主要是对系统指令的优化)
        (1)修复printf输出乱码问题。
        (2)新增OSprintf()函数代替printf()。//解决乱码
        (3)优化系统串口指令，使用户更容易随心所欲自定义指令。
        (4)F1工程的main.c文件里的中断函数移动到STM32F10xPeripMode.h里。
        (5)优化了串口中断函数内容。